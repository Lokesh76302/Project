#include <iostream>
#include <string>
#include <curl/curl.h>
#include <openssl/evp.h>
#include <openssl/sha.h>
#include <iomanip>
#include <sstream>

using namespace std;

// Function to get data from a URL
string fetchData(const string& url) {
  CURL* curl = curl_easy_init();
  curl_easy_setopt(curl, CURLOPT_URL, url.c_str());

  string data;
  curl_easy_setopt(curl, CURLOPT_WRITEFUNCTION, [](void* buffer, size_t size, size_t nmemb, void* userData) -> size_t {
    size_t totalSize = size * nmemb;
    static_cast<string*>(userData)->append(static_cast<char*>(buffer), totalSize);
    return totalSize;
  });
  curl_easy_setopt(curl, CURLOPT_WRITEDATA, &data);

  curl_easy_perform(curl);
  curl_easy_cleanup(curl);

  return data;
}

// Function to generate the SHA-256 hash
string computeHash(const string& text) {
  unsigned char hash[SHA256_DIGEST_LENGTH];
  EVP_MD_CTX* context = EVP_MD_CTX_new();
  EVP_DigestInit_ex(context, EVP_sha256(), nullptr);
  EVP_DigestUpdate(context, text.c_str(), text.length());
  EVP_DigestFinal_ex(context, hash, nullptr);
  EVP_MD_CTX_free(context);

  stringstream ss;
  for (int i = 0; i < SHA256_DIGEST_LENGTH; i++) {
    ss << hex << setfill('0') << setw(2) << (int)hash[i];
  }

  return ss.str();
}

int main() {
  // URL of the content you want to fetch
  const string contentUrl = "https://quod.lib.umich.edu/cgi/r/rsv/rsv-idx?

type=DIV1&byte=4697892";

  // Fetch the content
  string fetchedData = fetchData(contentUrl);

  // Calculate the SHA-256 hash
  string contentHash = computeHash(fetchedData);

  // Print the hash
  cout << "SHA-256 hash for the content is: " << contentHash << endl;

  return 0;
}
